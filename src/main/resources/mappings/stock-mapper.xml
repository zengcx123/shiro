<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanyuan.mapper.StockMapper">
	<!--mybatis ehcache缓存配置 -->
	<!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 <cache type="org.mybatis.caches.ehcache.LoggingEhcache"
		/> -->
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->
	<!-- 以下与实体类的中字段一致 -->
	<sql id="selectId">
		t1.id,
		t1.productId,
		t1.stock,
		t2.productName,
		t2.productPicNo,
		t2.productMaterial,
		t2.productWeight,
		t2.productUnit,
		t2.productPrice
	</sql>

	<select id="findStockbyId" resultType="com.lanyuan.entity.Stock">
		select
		<include refid="selectId" />
		from tap_stock t1 left join tap_product t2 on t1.productId = t2.id
		where 1 = 1 and t1.id = #{id}
	</select>

	<select id="findStockPage" resultType="com.lanyuan.entity.Stock">
		select
		<include refid="selectId" />
		from tap_stock t1 left join tap_product t2 on t1.productId = t2.id
		where 1 = 1 and t1.stock > 0
		<if test="productName != null and productName != ''">
			and t2.productName = '${productName}'
		</if>
		<if test="productPicNo != null and productPicNo != ''">
			and t2.productPicNo = '${productPicNo}'
		</if>
		<if test="productMaterial != null and productMaterial != ''">
			and t2.productMaterial like '%${productMaterial}%'
		</if>
		<if test="column != null">
			order by ${column} ${sort}
		</if>
	</select>

	<insert id="addStockEntity">
		insert into tap_stock (productId,stock) values (#{productId},'${stock}')
	</insert>

	<update id="updateStockEntity">
		update tap_stock set stock = '${stock}' where id = #{id}
	</update>

	<delete id="deleteStockEntity">
		delete from tap_stock where id = #{id}
	</delete>

	<select id="findStockbyProductId" resultType="com.lanyuan.entity.Stock">
		select
		<include refid="selectId" />
		from tap_stock t1 left join tap_product t2 on t1.productId = t2.id
		where 1 = 1 and t1.productId = #{productId}
	</select>

	<update id="updateStockByProductId">
		update tap_stock set stock = '${stock}' where productId = #{productId}
	</update>

	<select id="getAllWeight" resultType="com.lanyuan.entity.Stock">
		SELECT
			case when sum(t1.stock * t2.productWeight) is null then 0 else sum(round(t1.stock * t2.productWeight,3)) end as allWeight
		FROM
			tap_stock t1
		LEFT JOIN tap_product t2 ON t1.productId = t2.id
		WHERE
			1 = 1
		AND t1.stock > 0
		AND t2.productMaterial LIKE '%${productMaterial}%'
	</select>
</mapper>